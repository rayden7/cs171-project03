<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 7000.13.0109.2200                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='isle-of-man-tt-race-deaths-WITH-RIDERID#csv (isle-of-man-tt-race-deaths-WITH-RIDERID.csv)' inline='true' name='csv.41387.873529756944' version='8.0'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='L:\Harvard\CS 171\Github\cs171-project03\csv\' driver='' filename='isle-of-man-tt-race-deaths-WITH-RIDERID.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='isle-of-man-tt-race-deaths-WITH-RIDERID#csv' table='[isle-of-man-tt-race-deaths-WITH-RIDERID#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Event (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Event]'>
          <bin value='&quot;1000cc Production TT&quot;'>
            <value>&quot;1000cc Production TT&quot;</value>
            <value>&quot;Senior&quot;</value>
            <value>&quot;Senior Classic&quot;</value>
            <value>&quot;Senior TT&quot;</value>
            <value>&quot;Senior TT Race&quot;</value>
          </bin>
          <bin value='&quot;250cc Production TT&quot;'>
            <value>&quot;250cc Production TT&quot;</value>
            <value>&quot;Lightweight&quot;</value>
            <value>&quot;Lightweight Classic&quot;</value>
            <value>&quot;Lightweight TT&quot;</value>
            <value>&quot;Ultra-Lightweight&quot;</value>
            <value>&quot;Ultra-Lightweight TT&quot;</value>
          </bin>
          <bin value='&quot;500cc Classic&quot;'>
            <value>&quot;500cc Classic&quot;</value>
            <value>&quot;500cc Production Race&quot;</value>
            <value>&quot;600cc Supersport Race&quot;</value>
            <value>&quot;Junior&quot;</value>
            <value>&quot;Junior Classic&quot;</value>
            <value>&quot;Junior Classic Race&quot;</value>
            <value>&quot;Junior Clubman Race&quot;</value>
            <value>&quot;Junior Clubmans&quot;</value>
            <value>&quot;Junior TT&quot;</value>
          </bin>
          <bin value='&quot;Classic Race&quot;'>
            <value>&quot;Classic Race&quot;</value>
            <value>&quot;Classic TT&quot;</value>
          </bin>
          <bin value='&quot;Formula 1 TT&quot;'>
            <value>&quot;Formula 1 TT&quot;</value>
            <value>&quot;Formula III&quot;</value>
          </bin>
          <bin value='&quot;Newcomers&quot;'>
            <value>&quot;Newcomers&quot;</value>
            <value>&quot;Newcomers Race Class A&quot;</value>
          </bin>
          <bin value='&quot;Practice&quot;'>
            <value>&quot;Practice&quot;</value>
            <value>&quot;Practice Senior Clubmans&quot;</value>
            <value>&quot;Practice Sidecar&quot;</value>
            <value>&quot;Practice Sidecar TT&quot;</value>
            <value>&quot;Practice Sidecar TT (Passenger)&quot;</value>
            <value>&quot;Practice Sidecar TT (passenger)&quot;</value>
          </bin>
          <bin value='&quot;Sidecar Practice&quot;'>
            <value>&quot;Sidecar Practice&quot;</value>
            <value>&quot;Sidecar Race A&quot;</value>
            <value>&quot;Sidecar TT&quot;</value>
            <value>&quot;Sidecar TT (Passenger)&quot;</value>
            <value>&quot;Sidecar TT Practice(Passenger)&quot;</value>
            <value>&quot;Sidecar TT(Passenger)&quot;</value>
            <value>&quot;Supersport TT Race 1&quot;</value>
            <value>&quot;Supersport TT Race 2&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;250cc Production TT&quot;' value='Light-weight' />
          <alias key='&quot;500cc Classic&quot;' value='Junior' />
          <alias key='&quot;Classic Race&quot;' value='Classic' />
          <alias key='&quot;Formula 1 TT&quot;' value='Formula 1' />
          <alias key='&quot;Newcomers&quot;' value='Newcomers' />
          <alias key='&quot;Practice&quot;' value='Practice' />
          <alias key='&quot;Sidecar Practice&quot;' value='Sidecar' />
        </aliases>
      </column>
      <column datatype='string' name='[Event]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Rider Country Flag]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[Rider Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='isle-of-man-tt-race-deaths-WITH-RIDERID#csv (isle-of-man-tt-race-deaths-WITH-RIDERID.csv)' name='csv.41387.873529756944' />
          </datasources>
          <datasource-dependencies datasource='csv.41387.873529756944'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Rider Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column-instance column='[Rider Country]' derivation='None' name='[none:Rider Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[csv.41387.873529756944].[none:Rider Country:nk]' direction='DESC' using='[csv.41387.873529756944].[sum:Number of Records:qk]'>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Automatic'>
            </mark>
          </pane>
        </panes>
        <rows>[csv.41387.873529756944].[sum:Number of Records:qk]</rows>
        <cols>[csv.41387.873529756944].[none:Rider Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Per event'>
      <table>
        <view>
          <datasources>
            <datasource caption='isle-of-man-tt-race-deaths-WITH-RIDERID#csv (isle-of-man-tt-race-deaths-WITH-RIDERID.csv)' name='csv.41387.873529756944' />
          </datasources>
          <datasource-dependencies datasource='csv.41387.873529756944'>
            <column datatype='string' name='[Event]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Event]' derivation='None' name='[none:Event:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Automatic'>
            </mark>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41387.873529756944].[sum:Number of Records:qk]</rows>
        <cols>[csv.41387.873529756944].[none:Event:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='isle-of-man-tt-race-deaths-WITH-RIDERID#csv (isle-of-man-tt-race-deaths-WITH-RIDERID.csv)' name='csv.41387.873529756944' />
          </datasources>
          <datasource-dependencies datasource='csv.41387.873529756944'>
            <column datatype='string' name='[Event (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Event]'>
                <bin value='&quot;1000cc Production TT&quot;'>
                  <value>&quot;1000cc Production TT&quot;</value>
                  <value>&quot;Senior&quot;</value>
                  <value>&quot;Senior Classic&quot;</value>
                  <value>&quot;Senior TT&quot;</value>
                  <value>&quot;Senior TT Race&quot;</value>
                </bin>
                <bin value='&quot;250cc Production TT&quot;'>
                  <value>&quot;250cc Production TT&quot;</value>
                  <value>&quot;Lightweight&quot;</value>
                  <value>&quot;Lightweight Classic&quot;</value>
                  <value>&quot;Lightweight TT&quot;</value>
                  <value>&quot;Ultra-Lightweight&quot;</value>
                  <value>&quot;Ultra-Lightweight TT&quot;</value>
                </bin>
                <bin value='&quot;500cc Classic&quot;'>
                  <value>&quot;500cc Classic&quot;</value>
                  <value>&quot;500cc Production Race&quot;</value>
                  <value>&quot;600cc Supersport Race&quot;</value>
                  <value>&quot;Junior&quot;</value>
                  <value>&quot;Junior Classic&quot;</value>
                  <value>&quot;Junior Classic Race&quot;</value>
                  <value>&quot;Junior Clubman Race&quot;</value>
                  <value>&quot;Junior Clubmans&quot;</value>
                  <value>&quot;Junior TT&quot;</value>
                </bin>
                <bin value='&quot;Classic Race&quot;'>
                  <value>&quot;Classic Race&quot;</value>
                  <value>&quot;Classic TT&quot;</value>
                </bin>
                <bin value='&quot;Formula 1 TT&quot;'>
                  <value>&quot;Formula 1 TT&quot;</value>
                  <value>&quot;Formula III&quot;</value>
                </bin>
                <bin value='&quot;Newcomers&quot;'>
                  <value>&quot;Newcomers&quot;</value>
                  <value>&quot;Newcomers Race Class A&quot;</value>
                </bin>
                <bin value='&quot;Practice&quot;'>
                  <value>&quot;Practice&quot;</value>
                  <value>&quot;Practice Senior Clubmans&quot;</value>
                  <value>&quot;Practice Sidecar&quot;</value>
                  <value>&quot;Practice Sidecar TT&quot;</value>
                  <value>&quot;Practice Sidecar TT (Passenger)&quot;</value>
                  <value>&quot;Practice Sidecar TT (passenger)&quot;</value>
                </bin>
                <bin value='&quot;Sidecar Practice&quot;'>
                  <value>&quot;Sidecar Practice&quot;</value>
                  <value>&quot;Sidecar Race A&quot;</value>
                  <value>&quot;Sidecar TT&quot;</value>
                  <value>&quot;Sidecar TT (Passenger)&quot;</value>
                  <value>&quot;Sidecar TT Practice(Passenger)&quot;</value>
                  <value>&quot;Sidecar TT(Passenger)&quot;</value>
                  <value>&quot;Supersport TT Race 1&quot;</value>
                  <value>&quot;Supersport TT Race 2&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;250cc Production TT&quot;' value='Light-weight' />
                <alias key='&quot;500cc Classic&quot;' value='Junior' />
                <alias key='&quot;Classic Race&quot;' value='Classic' />
                <alias key='&quot;Formula 1 TT&quot;' value='Formula 1' />
                <alias key='&quot;Newcomers&quot;' value='Newcomers' />
                <alias key='&quot;Practice&quot;' value='Practice' />
                <alias key='&quot;Sidecar Practice&quot;' value='Sidecar' />
              </aliases>
            </column>
            <column datatype='string' name='[Event]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Event]' derivation='None' name='[none:Event:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[csv.41387.873529756944].[Event (group)]' direction='DESC' using='[csv.41387.873529756944].[sum:Number of Records:qk]'>
          </sort>
          <filter class='categorical' column='[csv.41387.873529756944].[none:Event:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;1000cc Production TT&quot;' function='range' level='[none:Event:nk]' to='&quot;Newcomers Race Class A&quot;' />
              <groupfilter from='&quot;Production TT&quot;' function='range' level='[none:Event:nk]' to='&quot;Ultra-Lightweight TT&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41387.873529756944].[none:Event:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41387.873529756944].[Event (group)]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Automatic'>
            </mark>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41387.873529756944].[sum:Number of Records:qk]</rows>
        <cols>[csv.41387.873529756944].[Event (group)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' hidden='false' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Per event'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41387.873529756944].[none:Event:nk]</field>
          <field>[csv.41387.873529756944].[none:Race:nk]</field>
          <field>[csv.41387.873529756944].[none:Rider Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41387.873529756944].[none:Event:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41387.873529756944].[none:Event:nk]</field>
          <field>[csv.41387.873529756944].[none:Race:nk]</field>
          <field>[csv.41387.873529756944].[none:Rider Name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[csv.41387.873529756944].[Event (group)]</field>
                </x-fields>
                <y-fields>
                  <field>[csv.41387.873529756944].[sum:Number of Records:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[csv.41387.873529756944].[Event (group)]</field>
                <field>[csv.41387.873529756944].[sum:Number of Records:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;500cc Classic&quot;</value>
              <value>38</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41387.873529756944].[none:Rider Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Per event' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Per Country' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
